<?xml version="1.0"?>
<note version="0.3" xmlns:link="http://beatniksoftware.com/tomboy/link" xmlns:size="http://beatniksoftware.com/tomboy/size" xmlns="http://beatniksoftware.com/tomboy"><title>NUC terminal</title><text xml:space="preserve"><note-content version="0.1" xmlns:link="http://beatniksoftware.com/tomboy/link" xmlns:size="http://beatniksoftware.com/tomboy/size">NUC terminal

âžœ  ~ history
    2  sudo mkdir <link:url>/usr/share/ca-certificate/extra</link:url>
    5  sudo cp certs/EDFCorpRootCA.crt <link:url>/usr/local/share/ca-certificates/EDFCorpRootCA.crt</link:url>
    6  sudo cp certs/EDFCorpSubCA.crt <link:url>/usr/local/share/ca-certificates/EDFCorpSubCA.crt</link:url>
    8  sudo update-ca-certificates
   10  sudo apt install chromium-browser
   12  mkdir Dev
   13  sudo apt install git
   14  git clone --recursive <link:url>https://azuredevops.mil.intra/EDF/CYBCOM/_git/kolt-planning_ops</link:url>
   15  cd kolt-planning_ops/
   16  sudo apt install curl
   17  curl <link:url>https://raw.githubusercontent.com/creationix/nvm/master/install.sh</link:url> | bash 
   18  mkdir tooru-kernel_api
   19  cd tooru-kernel_api/
   21  cp <link:url>~/Downloads/x86_64-unknown-linux-gnu.zip</link:url> ./
   22  unzip x86_64-unknown-linux-gnu.zip 
   23  rm x86_64-unknown-linux-gnu.zip 
   24  mv kernel-api/* .
   25  cd x86_64-unknown-linux-gnu/
   26  cd kernel-api/
   27  mv x86_64-unknown-linux-gnu/* ./
   28  rm -r kernel-api/ x86_64-unknown-linux-gnu/ 
   29  cp <link:url>~/Downloads/kernel-api</link:url> ./
   30  chmod +x kernel-api 
   31  RUST_LOG=debug LD_LIBRARY_PATH=$LD_LIBRARY_PATH:kernel-api-s4-ffi/lib-dev ./kernel-api
   32  vi config.yml
   33  RUST_LOG=debug LD_LIBRARY_PATH=$LD_LIBRARY_PATH:kernel-api-s4-ffi/lib-dev ./kernel-api -- ./config.yml
   34  RUST_LOG=debug LD_LIBRARY_PATH=$LD_LIBRARY_PATH: ./kernel-api -- ./config.yml
   35  RUST_LOG=debug LD_LIBRARY_PATH=$LD_LIBRARY_PATH:./ ./kernel-api -- ./config.yml
   36  RUST_LOG=debug ./kernel-api -- ./config.yml
   38  mkdir -p kernel-api-s4-ffi/lib-dev
   39  cd kernel-api-s4-ffi/
   40  mv kernel-api-s4-ffi/ s4-ffi
   41  RUST_LOG=debug LD_LIBRARY_PATH=$LD_LIBRARY_PATH:kernel-api-s4-ffi/lib-dev cargo run -- config.yml
   42  mv *.so* s4-ffi/lib-dev/
   43  RUST_LOG=debug LD_LIBRARY_PATH=$LD_LIBRARY_PATH:kernel-api-s4-ffi/lib-dev ./kernelapi -- config.yml
   44  RUST_LOG=debug LD_LIBRARY_PATH=$LD_LIBRARY_PATH:kernel-api-s4-ffi/lib-dev ./kernel-api -- config.yml
   45  RUST_LOG=debug LD_LIBRARY_PATH=$LD_LIBRARY_PATH:s4-ffi/lib-dev ./kernel-api -- config.yml
   46  RUST_LOG=debug LD_LIBRARY_PATH=$LD_LIBRARY_PATH:s4-ffi/lib-dev/ ./kernel-api -- config.yml
   47  mv kernel-api s4-ffi/lib-dev/
   48  cd s4-ffi/
   49  cd lib-dev/
   50  RUST_LOG=debug LD_LIBRARY_PATH=$LD_LIBRARY_PATH:s4-ffi/lib-dev/ ./kernel-api -- <link:url>~/Dev/tooru-kernel_api/config.yml</link:url>
   51  RUST_LOG=debug LD_LIBRARY_PATH=$LD_LIBRARY_PATH:s4-ffi/lib-dev/ ./kernel-api -- <link:url>/home/taimo/Dev/tooru-kernel_api/config.yml</link:url>
   52  sudo -i
   53  sudo apt install zsh
   54  echo $TERM
   55  sudo apt install tooru-kernel-api
   56  tooru-kernel-api
   58  sudo apt install tooru-fci
   60  zsh --version
   61  chsh -s $(which zsh)
   62  echo $BASH
   63  mv <link:url>~/Downloads/lib-dev</link:url> <link:url>/etc/tooru/kernel-api</link:url>
   64  sudo mv <link:url>~/Downloads/lib-dev</link:url> <link:url>/etc/tooru/kernel-api</link:url>
   65  systemctl start tooru-kernel-api
   66  systemctl start kernel-api
   67  systemctl
   68  systemctl --type=service
   69  journalctl -u kernel-api.service
   70  cd /etc/
   71  java
   72  sudo apt install openjdk-11-jre-headless
   74  cd <link:url>/var/log/</link:url>
   76  sudo mkdir kolt
   81  sudo touch kolt-log.json
   83  sudo chmod 755 kolt-log.json 
   84  sudo touch kolt-json.log
   85  sudo chmod 755 kolt-json.log
   86  chown taimo:taimo kolt
   87  sudo chown taimo:taimo kolt
   88  ls -la | grep kolt
   89  rm kolt-*
   90  sudo rm kolt-*
   91  cat initial_account_details.txt 
   92  mkdir kernel-api-s4-ffi
   93  sudo mkdir kernel-api-s4-ffi
   96  <link:internal>git</link:internal> clone --recursive <link:url>https://azuredevops.mil.intra/EDF/KVA/_git/tooru-ui</link:url>
   97  tooru-ui/
   98  cd tooru-ui/
   99  yarn run
  101  yarn build
  103  sudo apt-get install autoconf automake libtool curl make g++ unzip
  104  sudo apt install protobuf-compiler
  105  protoc
  108  code .
  112  cd plugins/
  113  nvm install 10
  114  cat README.md 
  117  cd Dev/
  118  sudo apt install vim
  119  cd <link:url>/etc/kolt</link:url>
  120  cd Dev/tooru-ui/
  121  cd cypress
  122  cd integration/
  128  vi README.md 
  129  vi <link:internal>cypress</link:internal>.env.json
  131  vi .gitignore 
  132  vi cypress.env.json 
  133  yarn cypress
  134  curl -sS <link:url>https://dl.yarnpkg.com/debian/pubkey.gpg</link:url> | sudo apt-key add -
  135  echo &quot;deb <link:url>https://dl.yarnpkg.com/debian/</link:url> stable main&quot; | sudo tee <link:url>/etc/apt/sources.list.d/yarn.list</link:url>
  136  sudo apt install yarn
  137  yarn install -vv
  138  npm install
  139  git checkout 5188-activate-plugins-in-planning-ops 
  140  yarn install
  141  export CYPRESS_DOWNLOAD_MIRROR=&quot;<link:url>https://kolt-nexus-master.mil.intra/repository/cypress-raw/</link:url>&quot;
  142  export NODE_EXTRA_CA_CERTS=/usr/local/share/ca-certificates/EDFCorpRootCA.crt
  143  yarn config set strict-ssl false
  144  yarn config set registry <link:url>https://kolt-nexus-master.mil.intra/repository/npm-deprepo/</link:url>
  145  yarn dev -vv
  146  git status
  147  vi package.json 
  148  yarn start
  149  yarn dev start
  150  yarn
  151  htop
  152  sudo apt install htop
  153  lsblk
  154  cd <link:url>/dev/sda</link:url>
  155  cd <link:url>/media/taimo/USB</link:url>
  156  cp kolt.zip <link:url>/etc/kolt/</link:url>
  157  sudo cp kolt.zip <link:url>/etc/kolt/</link:url>
  158  cd <link:url>/etc/kolt/</link:url>
  159  unzip kolt.zip 
  160  sudo unzip kolt.zip 
  161  mv kolt/* .
  162  sudo mv kolt/* .
  163  cd kolt/
  164  cd ..
  165  rm -r kolt
  166  sudo rm -r kolt
  167  vi kolt.service
  168  sudo apt install mariadb
  169  ps aux | grep
  170  netstat -tulpna 
  171  sudo apt install net-tools
  172  netstat -tulpns
  173  netstat -tulpna
  174  systemctl status mysql
  175  sudo netstat -tulpna
  176  java -jar kolt
  177  mysql kolt
  178  mysql -u kolt
  179  mysql -u root
  180  mysql -u root -p
  181  sudo mysql
  182  mariadb
  183  mariadb --version
  184  sudo apt install mariadb-server
  188  sudo apt upgrade mariadb-server
  189  sudo apt-get install --only-upgrade mariadb-server
  190  dpkg --list
  191  apt list --upgradable | less
  192  apt list -a mariadb-server
  193  sudo apt-get install software-properties-common
  194  sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8
  195  sudo add-apt-repository &quot;deb [arch=amd64,arm64,ppc64el] <link:url>http://mariadb.mirror.liquidtelecom.com/repo/10.4/ubuntu</link:url> $(lsb_release -cs) main&quot;
  196  ping 8.8.8.8.
  197  sudo apt update
  198  sudo apt-get remove mariadb-server
  199  systemctl status mysql.service 
  200  sudo systemctl stop mysql
  201  sudo apt-get purge mysql-server mysql-client mysql-common mysql-server-core-* mysql-client-core-*
  202  sudo apt -y install mariadb-server mariadb-client
  204  mysql -u kolt -p
  205  mysql --version
  206  java -jar kolt-jar
  207  vi application.yml 
  208  echo $SHELL
  209  systemctl status kernel-api
  210  pwd
  211  cd /
  212  cd /home
  213  ls -la
  214  cd /etc
  215  cd kolt
  216  java -jar kolt.jar
  217  vi .zshrc
  218  vi .bashrc
  219  nvm
  220  nvm ls-remote
  221  nvm install
  222  nvm install 14.0
  223  ping 8.8.8.8
  224  ip a
  225  nvm install 14
  226  vi .zsh_history
  227  vi .<link:internal>bash</link:internal>_history
  229  nvm use 10
  230  clear
  231  cd kolt-planning_ops
  232  yarn dev
  233  cd
  234  nvm use 14
  235  cd Dev
  236  cd tooru-ui
  237  plugin=fdc yarn dev-kolt
  238  plugin=fo yarn dev-kolt
  239  plugin=wk9 yarn dev-kolt
  240  vi package.json
  242  yarn dev-all
  244  code .
  245  sudo apt install curl wget git
  246  sudo apt update
  247  sudo apt upgrade
  248  sudo apt install curl wget git
  249  sh -c &quot;$(curl -fsSL <link:url>https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh</link:url>)&quot;
  251  cd Dev/kolt-planning_ops
  252  yarn dev
  253  cd ..
  254  cd tooru-ui
  262  sudo apt install nvm
  263  nvm use 14
  264  cd ..
  265  cd tooru-ui
  266  nvm use 14
  267  vi .bashrc
  268  echo $TERM
  269  echo $SHELL
  270  export a=12
  271  echo $a
  272  echo $PATH
  273  nvm
  274  vi .zshrc
  275  vi .bashrc
  276  cd
  278  pwd
  279  nvm
  280  vi .zshrc
  281  vi .bashrc
  282  nvm
  283  echo $PATH
  284  cd Dev/tooru-ui
  285  nvm use 14
  286  yarn dev-all
  287  sudo apt-get install texstudio texlive-latex-extra
  288  cd Dev/
  289  git clone --recursive <link:url>https://azuredevops.mil.intra/EDF/KVA/_git/tooru-documentation</link:url>
  290  git status
  291  git flow
  292  git --help
  293  git checkout develop
  294  git status
  295  cd tooru-documentation
  296  git status
  297  git flow
  298  git push
  299  git checkout develop
  300  git add *
  301  cd Dev/
  302  git clone --recursive <link:url>https://azuredevops.mil.intra/EDF/KVA/_git/tooru-documentation</link:url>
  303  asdas
  305  cd tooru-documentation
  306  git checkout develop
  307  cd Dev/kolt-planning_ops
  308  yarn dev
  309  cd ..
  310  cd tooru-ui
  311  nvm use 14
  312  yarn dev-all
  313  cd Dev/kolt-planning_ops
  314  nvm use 10
  315  yarn dev
  316  CD
  317  cd <link:url>/etc/kolt</link:url>
  319  java -jar kolt.jar
  322  sudo apt install gnote
  323  cd ..
  324  cd tooru-ui
  325  yarn dev=all
  326  yarn dev-all
  327  sudo apt-get update
  328  sudo apt-get install --reinstall gnome-control-center
  329  cd etc/kolt
  331  cd <link:url>/etc/kolt</link:url>
  332  java -jar kolt.jar
  333  cd ..
  335  cd /home
  337  cd taimo/Dev/kolt-planning_ops
  338  nvm use 10
  339  yarn dev
  340  cd ..
  341  cd tooru-ui
  342  nvm use 14
  343  yarn dev-all
  345  vi package.json
  346  yarn cypress
  347  cd node_modules
  349  cd ..
  350  yarn cypress
  351  git flow init
  352  sudo apt install git-flow
  353  git flow init
  354  git flow feature start 8395-<link:internal>cypress</link:internal>-tests
  356  cd
  357  cd Dev/kolt-planning_ops
  359  code .
  360  ping 8.8.8.8
  361  echo fs.inotify.max_user_watches=524288 | sudo tee -a <link:url>/etc/sysctl.conf</link:url> &amp;&amp; sudo sysctl -p
  362  yarn cypress
  363  cd
  364  cd Dev/kolt-planning_ops
  365  cd cypress
  366  lsw
  368  cd fixtures
  370  vi login.json
  372  cp login.json <link:url>~/Dev/tooru-ui/cypress/fixtures</link:url>
  373  cd -
  375  cd <link:url>~/Dev/tooru-ui</link:url>
  377  cd <link:internal>cypress</link:internal>
  379  cd fixtures
  381  cd -
  382  cd fixtures
  384  cd <link:url>~/Dev/kolt-planning_ops/cypress/fixtures</link:url>
  386  cp * -
  387  cp * -/
  388  echo $-
  389  echo -
  390  echo \n: 1611061413:0;ls
  391  cp * <link:url>~/Dev/tooru-ui/cypress/fixtures</link:url>
  395  yarn <link:internal>cypress</link:internal>
  398  <link:internal>git</link:internal> status
  399  rm diskspace.json login.json manifest.json map-server-folders-tree.json maps.json setup_info.json time.json user_settings.json vectors.json version.json
  401  <link:internal>git</link:internal> diff
  402  cd ..
  404  yarn <link:internal>cypress</link:internal>
  405  cd <link:url>/etc/kolt</link:url>
  406  java -jar kolt.jar
  408  nvm use 10
  409  yarn dev
  410  cd Dev/kolt-planning_ops
  411  yarn dev
  413  cd Dev/tooru-ui
  414  nvm use 14
  415  yarn dev-all
  417  code .
  419  cd Dev/kolt-planning_ops
  420  code .
  421  yarn cypress
  422  cd <link:url>/etc/kolt</link:url>
  423  java -jar kolt.jar
  425  cd Dev/kolt-planning_ops
  426  nvm use 10
  427  yarn dev
  429  cd Dev/tooru-ui
  430  nvm use 14
  431  yarn dev-all
  432  code .
  433  yarn <link:internal>cypress</link:internal>
  435  cd Dev/kolt-planning_ops
  436  code .
  437  sudo mysql
  440  cd Dev
  441  lsw
  445  <link:internal>git</link:internal> clone --recursive <link:url>https://azuredevops.mil.intra/EDF/CYBCOM/_git/kolt-current_ops</link:url>
  447  ssh-keygen
  448  cd .ssh
  451  cd .ssh
  453  cat id_rsa.pub
  456  cd Dev
  458  rm -rf kolt-current_ops
  459  git clone ssh://azuredevops.mil.intra:22/EDF/CYBCOM/_<link:internal>git</link:internal>/kolt-current_ops
  461  <link:internal>git</link:internal> clone --recursive ssh://azuredevops.mil.intra:22/EDF/CYBCOM/_<link:internal>git</link:internal>/kolt-current_ops
  463  cd kolt-current_ops
  465  <link:internal>git</link:internal> log
  466  git checkout 20fa0ac7122bd889aaef3e78e9a733b7bcedf02e
  467  <link:internal>git</link:internal> log
  469  cd gradle
  471  cd wrapper
  473  vi gradle-wrapper.properties
  475  cd ..
  477  cd ..
  479  <link:internal>git</link:internal> checkout develop
  480  cd gradle
  482  <link:internal>git</link:internal> checkout 20fa0ac7122bd889aaef3e78e9a733b7bcedf02e
  484  vi init.sh
  486  vi init.sh
  487  cat README.md
  489  chmod +x init.sh
  490  ./init.sh
  492  cd gradle
  494  vi repositories.gradle
  496  cd ..
  498  vi gradle.properties
  499  cd gradle
  501  cd wrapper
  503  cd ..
  505  cd ..
  507  vi build.gradle
  508  sudo groupadd docker
  509  sudo usermod -aG docker $USER
  510  docker ps
  511  relog
  512  login
  513  id -g
  514  docker ps
  515  su - $USER
  516  docker ps
  517  cd 
  518  cd Dev/kolt-current_ops
  520  whoami
  521  docker-compose up
  522  cd src
  524  cd main
  526  cd resources
  528  vi application.yml
  529  cd ..
  531  cd ..
  532  ./gradlew bootrun
  534  cd ..
  535  ./gradlew bootrun
  537  cd src/main/resources
  539  vi application.yml
  540  ./gradlew bootrun
  541  systemctl status kernel-api
  542  sudo apt upgrade kernel-api
  543  sudo apt upgrade tooru-kernel-api
  544  ./gradlew bootrun
  545  git log
  546  git checkout 779b88fe496c1e6cf4dec496cacfc1c34828c339
  648  <link:internal>git</link:internal> config --global init.defaultBranch master
  674  <link:internal>git</link:internal> push --set-upstream origin feature/8395-<link:internal>cypress</link:internal>-tests
</note-content>
</text><last-change-date>2021-03-06T08:43:16,000000Z</last-change-date><last-metadata-change-date>2021-03-06T08:43:16,000000Z</last-metadata-change-date><create-date>2021-01-22T12:19:11,000000Z</create-date><cursor-position>289</cursor-position><selection-bound-position>289</selection-bound-position><width>450</width><height>400</height></note>

